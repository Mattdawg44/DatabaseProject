@model MenuManager.Models.Store

@{
    ViewBag.Title = "Create Store";
}

<h2>Create Store</h2>
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
            System.Linq.Expressions.Expression<Func<Store, string>> expr = model => model.Name;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
        
            expr = model => model.Phone;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)

            expr = model => model.Address;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
        }

        @HtmlBuilder.Buttons("Create", ViewBag.CancelUrl)
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/length-help.js")
}
