@model MenuManager.Models.Menu

@{
    ViewBag.Title = "Create Menu";
}

<h2>Create Menu</h2>
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
            System.Linq.Expressions.Expression<Func<Menu, string>> expr = model => model.Name;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Store_ID, "Store", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Store_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Store_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        @HtmlBuilder.Buttons("Create", ViewBag.CancelUrl)
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/length-help.js")
}
