@model MenuManager.Models.Employee

@{
    ViewBag.Title = "Edit Employee";
}

<h2>Edit Employee</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        @{
            System.Linq.Expressions.Expression<Func<Employee, string>> expr = model => model.FName;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
            
            expr = model => model.LName;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
            
            expr = model => model.Position;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Wage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon">$</span>
                    @Html.EditorFor(model => model.Wage, new { htmlAttributes = new { @class = "form-control short-field" } })
                </div>
                @Html.ValidationMessageFor(model => model.Wage, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            expr = model => model.Phone;
            @HtmlBuilder.TextField(
                @Html.LabelFor(expr, htmlAttributes: new { @class = "control-label col-md-2" }),
                @Html.EditorFor(expr, new { htmlAttributes = new { @class = "form-control length-help" } }),
                @Html.ValidationMessageFor(expr, "", new { @class = "text-danger" }),
                true)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Store_ID, "Store", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Store_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Store_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        @HtmlBuilder.Buttons("Save", ViewBag.CancelUrl)
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/length-help.js")
}
