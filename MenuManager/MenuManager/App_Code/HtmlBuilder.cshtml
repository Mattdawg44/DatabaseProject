@{
    Layout = null;
}

@******************************** 
    DETAILS & DELETE
**********************************@

@helper BreadcrumbTitle(System.Web.Mvc.UrlHelper url, string breadcrumbParentText, string breadcrumbThisPageText)
{
    <h3><a href="@url.Action("Index")">@breadcrumbParentText</a> > @breadcrumbThisPageText</h3>
}

@helper DetailsHeader(
    System.Web.Mvc.UrlHelper url,
    string modelName,
    int itemID,
    string breadcrumbParentText,
    string breadcrumbThisPageText
)
{
    <div class="details-header open">
        @HtmlBuilder.BreadcrumbTitle(url, breadcrumbParentText, breadcrumbThisPageText)
        <hr />
        <p class="details-actions">
            @HtmlBuilder.EditItemLink(url, modelName, itemID)
            @HtmlBuilder.DeleteItem()
        </p>
    </div>

    <div class="details-delete">
        <h3>Are you sure?</h3>
        <form action="@url.RequestContext.HttpContext.Request.Path" method="post">
            @{ var html = ((System.Web.Mvc.WebViewPage)WebPageContext.Current.Page).Html; }
            @html.AntiForgeryToken()
            @HtmlBuilder.DeleteConfirmButtons()
        </form>
        <hr />
    </div>
}

@******************************** 
    FORMS
**********************************@

@helper TextField(
    System.Web.Mvc.MvcHtmlString labelElem,
    System.Web.Mvc.MvcHtmlString inputElem,
    System.Web.Mvc.MvcHtmlString validationElem,
    bool showCharCount = false)
{
    <div class="form-group">
        @labelElem
        <div class="col-md-10">
            @inputElem
            @if (showCharCount)
            {
                <p class="help-block"></p>
            }
            @validationElem
        </div>
    </div>
}

@helper Buttons(string submitBtnText, string returnUrl = null)
{
    <div class="form-group form-buttons">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value=@submitBtnText class="btn btn-primary btn-submit" />
            @if (!string.IsNullOrWhiteSpace(returnUrl))
            {
                <a href=@returnUrl class="btn btn-default">Cancel</a>
            }
        </div>
    </div>
}

@******************************** 
    DISPLAY
**********************************@

@helper TextWithBreaks(string text)
{
    <div class="multiline">@text</div>
}

@helper TextWithTooltip(string text, string tooltip, bool inline = false)
{
    if (!string.IsNullOrWhiteSpace(tooltip))
    {
        if (inline)
        {
            <span title="@tooltip">@text</span>
        }
        else
        {
            <div title="@tooltip">@text</div>
        }
    }
    else
    {
        if (inline)
        {
            <span>@text</span>
        }
        else
        {
            <div>@text</div>
        }
    }
}

@******************************** 
    ACTIONS
**********************************@

@helper DeleteItemLink(System.Web.Mvc.UrlHelper url, string controllerName, int? itemId)
{
    <a title="Delete" class="btn btn-xs btn-default" href="@url.Action("Delete", controllerName, new { id = itemId })"><span class="glyphicon glyphicon-remove"></span></a>
}

@helper DeleteItem()
{
    <a title="Delete" href="#" class="btn btn-xs btn-default btn-delete" onclick="return false"><span class="glyphicon glyphicon-remove"></span></a>
}

@helper DeleteConfirmButtons()
{
    <div class="form-actions">
        <input type="submit" value="Delete" class="btn btn-danger btn-submit" />
        @{ var html = ((System.Web.Mvc.WebViewPage)WebPageContext.Current.Page).Html; }
        <a class="btn btn-default@(string.IsNullOrWhiteSpace(html.ViewBag.CancelUrl)
                               ? @html.Raw(" btn-delete-cancel\" onclick=\"return false") @* Link goes nowhere if CancelUrl isn't set *@
                               : @html.Raw("\" href=\"" + html.ViewBag.CancelUrl))">
            Cancel
        </a>
    </div>
}

@helper EditItemLink(System.Web.Mvc.UrlHelper url, string controllerName, int? itemId)
{
    <a title="Edit" class="btn btn-xs btn-default" href="@url.Action("Edit", controllerName, new { id = itemId })"><span class="glyphicon glyphicon-pencil"></span></a>
}

@helper DetailsLink(System.Web.Mvc.UrlHelper url, string controllerName, int? itemId,
    string linkText, string tooltip = null)
{
    string attributes = ("href=\"" + @url.Action("Details", controllerName, new { id = itemId }) + "\"");
    if (!string.IsNullOrWhiteSpace(tooltip))
    {
        attributes += " title=\"" + tooltip + "\"";
    }
    var html = ((System.Web.Mvc.WebViewPage)WebPageContext.Current.Page).Html;
    <a @html.Raw(attributes)>@linkText</a>
}

@helper ListLink(System.Web.Mvc.UrlHelper url, string itemType, int itemCount, object entityIds)
{
    if (itemCount == 0)
    {
        @itemCount
    }
    else
    {
        System.Web.Routing.RouteValueDictionary entityDict = new System.Web.Routing.RouteValueDictionary(entityIds);
        if (entityDict.Count > 0)
        {
            <a href="@url.Action("Index", itemType, entityDict)">@itemCount</a>
        }
        else
        {
            @itemCount
        }
    }
}